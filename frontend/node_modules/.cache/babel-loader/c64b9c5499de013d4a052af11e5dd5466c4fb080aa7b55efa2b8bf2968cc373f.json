{"ast":null,"code":"var _jsxFileName = \"/Users/ivandelrio/apps/dompechatbot/frontend/src/components/ChatUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Box, Paper, TextField, Button, Typography, CircularProgress, IconButton, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MessageList from './MessageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatUI = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Memoized version of handleSubmit to prevent infinite loops\n  const memoizedHandleSubmit = useCallback(async (inputValue = input, isNewConversation = false) => {\n    // Use provided input value or the current state\n    const userMessage = inputValue || input;\n\n    // Don't send empty messages (except for initial greeting)\n    if (!userMessage && !isNewConversation) return;\n    try {\n      // Update UI immediately with user message if it's not the initial greeting\n      if (!isNewConversation) {\n        setMessages(prev => [...prev, {\n          role: 'user',\n          content: userMessage\n        }]);\n        setInput('');\n      }\n\n      // Create the messages payload\n      const payload = {\n        messages: isNewConversation ? [] : [...messages, {\n          role: 'user',\n          content: userMessage\n        }],\n        isNewConversation: isNewConversation\n      };\n\n      // Show loading state\n      setLoading(true);\n      setError(null);\n\n      // Call the API\n      const response = await axios.post('/api/chat', payload);\n\n      // Update conversation with the assistant's response\n      if (isNewConversation) {\n        // For a new conversation, we only need the assistant's greeting\n        setMessages([{\n          role: 'assistant',\n          content: response.data.message\n        }]);\n      } else {\n        // For ongoing conversations, use the full conversation returned from the API\n        setMessages(response.data.conversation);\n      }\n    } catch (err) {\n      console.error('Error communicating with the chatbot:', err);\n      setError('Sorry, there was an error communicating with the chatbot. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [input, messages]);\n\n  // Auto-greet on first load\n  useEffect(() => {\n    if (messages.length === 0) {\n      memoizedHandleSubmit('', true);\n    }\n  }, [messages.length, memoizedHandleSubmit]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  // Replace the original handleSubmit with a call to memoizedHandleSubmit\n  const handleSubmit = (inputValue, isNewConversation) => {\n    memoizedHandleSubmit(inputValue, isNewConversation);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit();\n    }\n  };\n  const handleClearChat = () => {\n    setMessages([]);\n    // Auto-greet again after clearing\n    setTimeout(() => {\n      handleSubmit('', true);\n    }, 100);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      backgroundColor: '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        backgroundColor: '#f5f9fd',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderBottom: '1px solid #e0e0e0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        children: \"Chat with DompeAssist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: handleClearChat,\n        size: \"small\",\n        title: \"Start new conversation\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        p: 2,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 2,\n          backgroundColor: '#fdeaea',\n          borderLeft: '4px solid #f44336'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        display: 'flex',\n        backgroundColor: '#f5f9fd'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress,\n        disabled: loading,\n        multiline: true,\n        maxRows: 4,\n        size: \"small\",\n        sx: {\n          mr: 1,\n          '& .MuiOutlinedInput-root': {\n            borderRadius: '20px',\n            backgroundColor: '#ffffff'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disableElevation: true,\n        disabled: loading || !input.trim() && messages.length > 0,\n        onClick: () => handleSubmit(),\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 20\n        }, this),\n        sx: {\n          borderRadius: '20px',\n          px: 3\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatUI, \"YOXaAyNdV2/WjdF6UCDoUwpHJ3Y=\");\n_c = ChatUI;\nexport default ChatUI;\nvar _c;\n$RefreshReg$(_c, \"ChatUI\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","axios","Box","Paper","TextField","Button","Typography","CircularProgress","IconButton","Divider","SendIcon","DeleteIcon","MessageList","jsxDEV","_jsxDEV","ChatUI","_s","messages","setMessages","input","setInput","loading","setLoading","error","setError","messagesEndRef","scrollToBottom","memoizedHandleSubmit","inputValue","isNewConversation","userMessage","prev","role","content","payload","response","post","data","message","conversation","err","console","length","_messagesEndRef$curre","current","scrollIntoView","behavior","handleInputChange","e","target","value","handleSubmit","handleKeyPress","key","shiftKey","preventDefault","handleClearChat","setTimeout","elevation","sx","height","display","flexDirection","overflow","backgroundColor","children","p","justifyContent","alignItems","borderBottom","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","title","flex","mb","borderLeft","ref","fullWidth","placeholder","onChange","onKeyPress","disabled","multiline","maxRows","mr","borderRadius","disableElevation","trim","endIcon","px","_c","$RefreshReg$"],"sources":["/Users/ivandelrio/apps/dompechatbot/frontend/src/components/ChatUI.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { \n  Box, \n  Paper, \n  TextField, \n  Button, \n  Typography, \n  CircularProgress,\n  IconButton,\n  Divider\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport MessageList from './MessageList';\n\nconst ChatUI = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Memoized version of handleSubmit to prevent infinite loops\n  const memoizedHandleSubmit = useCallback(async (inputValue = input, isNewConversation = false) => {\n    // Use provided input value or the current state\n    const userMessage = inputValue || input;\n    \n    // Don't send empty messages (except for initial greeting)\n    if (!userMessage && !isNewConversation) return;\n\n    try {\n      // Update UI immediately with user message if it's not the initial greeting\n      if (!isNewConversation) {\n        setMessages(prev => [...prev, { role: 'user', content: userMessage }]);\n        setInput('');\n      }\n\n      // Create the messages payload\n      const payload = {\n        messages: isNewConversation ? [] : [...messages, { role: 'user', content: userMessage }],\n        isNewConversation: isNewConversation\n      };\n\n      // Show loading state\n      setLoading(true);\n      setError(null);\n\n      // Call the API\n      const response = await axios.post('/api/chat', payload);\n      \n      // Update conversation with the assistant's response\n      if (isNewConversation) {\n        // For a new conversation, we only need the assistant's greeting\n        setMessages([{ role: 'assistant', content: response.data.message }]);\n      } else {\n        // For ongoing conversations, use the full conversation returned from the API\n        setMessages(response.data.conversation);\n      }\n    } catch (err) {\n      console.error('Error communicating with the chatbot:', err);\n      setError('Sorry, there was an error communicating with the chatbot. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [input, messages]);\n\n  // Auto-greet on first load\n  useEffect(() => {\n    if (messages.length === 0) {\n      memoizedHandleSubmit('', true);\n    }\n  }, [messages.length, memoizedHandleSubmit]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  // Replace the original handleSubmit with a call to memoizedHandleSubmit\n  const handleSubmit = (inputValue, isNewConversation) => {\n    memoizedHandleSubmit(inputValue, isNewConversation);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit();\n    }\n  };\n\n  const handleClearChat = () => {\n    setMessages([]);\n    // Auto-greet again after clearing\n    setTimeout(() => {\n      handleSubmit('', true);\n    }, 100);\n  };\n\n  return (\n    <Paper \n      elevation={3} \n      sx={{ \n        height: '100%', \n        display: 'flex', \n        flexDirection: 'column',\n        overflow: 'hidden',\n        backgroundColor: '#fff',\n      }}\n    >\n      <Box sx={{ \n        p: 2, \n        backgroundColor: '#f5f9fd', \n        display: 'flex', \n        justifyContent: 'space-between',\n        alignItems: 'center',\n        borderBottom: '1px solid #e0e0e0'\n      }}>\n        <Typography variant=\"h6\" color=\"primary\">\n          Chat with DompeAssist\n        </Typography>\n        <IconButton \n          color=\"primary\" \n          onClick={handleClearChat}\n          size=\"small\"\n          title=\"Start new conversation\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      </Box>\n      \n      <Box sx={{ \n        flex: 1, \n        overflow: 'auto', \n        p: 2,\n        display: 'flex',\n        flexDirection: 'column',\n      }}>\n        <MessageList messages={messages} />\n        \n        {loading && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\n            <CircularProgress size={24} />\n          </Box>\n        )}\n        \n        {error && (\n          <Paper \n            sx={{ \n              p: 2, \n              mb: 2, \n              backgroundColor: '#fdeaea',\n              borderLeft: '4px solid #f44336'\n            }}\n          >\n            <Typography color=\"error\">{error}</Typography>\n          </Paper>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </Box>\n      \n      <Divider />\n      \n      <Box sx={{ \n        p: 2, \n        display: 'flex', \n        backgroundColor: '#f5f9fd',\n      }}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          placeholder=\"Type your message...\"\n          value={input}\n          onChange={handleInputChange}\n          onKeyPress={handleKeyPress}\n          disabled={loading}\n          multiline\n          maxRows={4}\n          size=\"small\"\n          sx={{ \n            mr: 1,\n            '& .MuiOutlinedInput-root': {\n              borderRadius: '20px',\n              backgroundColor: '#ffffff',\n            }\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          disabled={loading || (!input.trim() && messages.length > 0)}\n          onClick={() => handleSubmit()}\n          endIcon={<SendIcon />}\n          sx={{ borderRadius: '20px', px: 3 }}\n        >\n          Send\n        </Button>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ChatUI; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}